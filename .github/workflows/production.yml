name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger beim Push auf den main-Branch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Setze hier Node.js Version 22

      - name: Install dependencies using Yarn
        run: |
          yarn install

      - name: Build node.js Application using Yarn
        run: |
          yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64/v8 -t ghcr.io/${{ github.repository }}/GoogleFontWrapper-be:latest --push .

  deploy:
    name: Deploy App
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Deploy app
        uses: appleboy/ssh-action@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER}}
          key: ${{ secrets.SSH_KEY }}
          envs: GITHUB_TOKEN
          script: |
            echo "${GITHUB_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin &&
            docker pull ghcr.io/${{ github.repository }}/GoogleFontWrapper:latest &&
            # Remove existing container if it exists (ignore errors if not found)
            docker rm -f googlefontwrapper || true &&
            # Run a new container instance with restart policy and port mapping
            docker run -d --restart=on-failure:5 -p 65002:3001 --name googlefontwrapper ghcr.io/${{ github.repository }}/GoogleFontWrapper:latest

  cleanup:
    name: Cleanup container registry
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      packages: write

    steps:
      - uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          package: google-font-wrapper/GoogleFontWrapper
          delete-untagged: true
          keep-n-tagged: 3
